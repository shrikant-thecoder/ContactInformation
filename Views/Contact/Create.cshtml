@*@model Contacts.Models.Contact*@
@model ContactInformation.Models.ViewModel

@{
    ViewBag.Title = "Manage Contact";
}

<h2>Manage Contacts</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.contact.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.contact.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.contact.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.contact.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.contact.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.contact.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.contact.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.contact.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.contact.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.contact.PhoneNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.contact.PhoneNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.contact.PhoneNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (Model.contact.Id!=0)
                {
                    <input type="submit" value="Update" class="btn btn-default"  onclick='window.location = "@Url.Action("Edit", "Contact", new  { Id = @Model.contact.Id })'/>
                }
                else
                {
                    <input type="submit" value="Save" class="btn btn-default" onclick='window.location = "@Url.Action("Create", "Contact")'/>
                }

            </div>
        </div>
    </div>
}


<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.contact.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.contact.LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.contact.Email)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.contact.PhoneNo)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.contact.Status)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.contacts)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Delete/Inactive", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
